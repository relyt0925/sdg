version: "1.0"
blocks:
  - name: router
    type: LLMBlock
    config:
      config_path: ../../configs/knowledge/router.yaml
      output_cols:
        - route
      gen_kwargs:
        model: text-classifier-knowledge-v3-clm
        temperature: 0
        max_tokens: 1
        extra_body:
          allowed_token_ids:
            - 32001 # '_A_'
            - 32002 # '_B_'
            - 32003 # '_C_'

  - name: SetClassifierValue
    type: SetToMajorityValueBlock
    config:
      col_name: route

  - name: duplicate_document_col
    type: DuplicateColumnsBlock
    config:
      columns_map:
        document: base_document

  - name: gen_detailed_summary
    type: LLMBlock
    config:
      config_path: ../../configs/knowledge/detailed_summary.yaml
      output_cols:
        - summary_detailed
      gen_kwargs:
        max_tokens: 2048

  - name: gen_atomic_facts
    type: LLMBlock
    config:
      config_path: ../../configs/knowledge/atomic_facts.yaml
      output_cols:
        - summary_atomic_facts
      gen_kwargs:
        max_tokens: 2048

  - name: gen_extractive_summary
    type: LLMBlock
    config:
      config_path: ../../configs/knowledge/extractive_summary.yaml
      output_cols:
        - summary_extractive
      gen_kwargs:
        max_tokens: 2048

  - name: flatten_summary_columns
    type: FlattenColumnsBlock
    config:
      var_cols:
        - summary_detailed
        - summary_extractive
        - summary_atomic_facts
        - base_document
      value_name: summary
      var_name: dataset_type

  - name: rename_to_document_column
    type: RenameColumnsBlock
    config:
      columns_map:
        document: raw_document
        summary: document

  - name: knowledge generation
    type: ConditionalLLMBlock
    config:
      config_paths:
        - - ../../configs/knowledge/generate_questions_responses.yaml
          - _A_
        - - ../../configs/knowledge/generate_questions_responses.yaml
          - _B_
        - - ../../configs/knowledge/generate_code_questions_responses.yaml
          - _C_
      output_cols:
        - question
        - response
      selector_column_name: route
      batch_kwargs:
        batched: true
      parser_kwargs:
        parser_name: custom
        parsing_pattern: '\[(?:Question|QUESTION)\]\s*(.*?)\s*\[(?:Answer|ANSWER)\]\s*(.*?)\s*(?=\[(?:Question|QUESTION)\]|$)'
        parser_cleanup_tags:
          - "[END]"
      gen_kwargs: 
        max_tokens: 512

  - name: eval_faithfulness_qa_pair
    type: LLMBlock
    config:
      config_path: ../../configs/knowledge/evaluate_faithfulness.yaml
      output_cols:
        - explanation
        - judgment
      gen_kwargs:
        max_tokens: 512

  - name: filter_faithfulness
    type: FilterByValueBlock
    config:
      filter_column: judgment
      filter_value: "YES"
      operation: eq
    drop_columns:
      - judgment
      - explanation

  - name: eval_relevancy_qa_pair
    type: LLMBlock
    config:
      config_path: ../../configs/knowledge/evaluate_relevancy.yaml
      output_cols:
        - feedback
        - score
      gen_kwargs:
        max_tokens: 512

  - name: filter_relevancy
    type: FilterByValueBlock
    config:
      filter_column: score
      filter_value: 2.0
      operation: eq
      convert_dtype: float
    drop_columns:
      - feedback
      - score

  - name: eval_verify_question
    type: LLMBlock
    config:
      config_path: ../../configs/knowledge/evaluate_question.yaml
      output_cols:
        - explanation
        - rating
      gen_kwargs:
        max_tokens: 512

  - name: filter_verify_question
    type: FilterByValueBlock
    config:
      filter_column: rating
      filter_value: 1.0
      operation: eq
      convert_dtype: float
    drop_columns:
      - explanation
      - rating
      - __index_level_0__

datamixing:
  auxiliary_instructions:
    summary_detailed:
      - Provide me with a comprehensive summary of the given document.
      - Prepare a detailed breakdown of the contents of the document for me.
      - Summarize the document thoroughly, covering all important points.
      - Create a detailed executive summary of the provided document.
      - Compose a comprehensive overview of the document's content.
      - Deliver a detailed synopsis of the material presented in the document.
      - Furnish me with a detailed analysis of the document's key points.
      - Generate a thorough summary of the main ideas in the document.
      - Offer a detailed digest of the information contained in the document.
      - Supply me with a comprehensive rundown of the document's contents.
    summary_extractive:
      - Provide me with a summary of the document using extractive methods.
      - Create an extractive summary for the given document.
      - Generate an extractive summary from the document that was given to you.
      - Summarize the document using extractive techniques.
      - Create a summary of the provided document using extractive methods.
      - Generate an extractive summary for the document provided.
      - Using extractive techniques, summarize the given document.
      - Create a summary of the document using extractive summarization.
      - Generate an extractive summary of the document that was provided.
      - Summarize the provided document using extractive summarization techniques.
    summary_atomic_facts:
      - Identify and list all atomic facts from the document.
      - Extract all key facts from the given document.
      - List all the important facts from the provided document.
      - Highlight all the atomic facts present in the document.
      - Identify and enumerate all key facts from the given text.
      - List out all the critical information from the document.
      - Highlight all the essential facts from the provided text.
      - Identify and summarize all the important details from the document.
      - Extract all the atomic facts from the given document.
      - List all the key takeaways from the provided text.
